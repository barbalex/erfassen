{"version":3,"sources":["webpack:///./src/templates/benutzerDokuTemplate.tsx"],"names":["Container","styled","div","withConfig","displayName","componentId","Menu","Doku","MenuTitle","MenuTitleLink","Link","DokuDate","p","pageQuery","BenutzerDokuTemplate","_ref","data","markdownRemark","allMarkdownRemark","frontmatter","html","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_ErrorBoundary__WEBPACK_IMPORTED_MODULE_9__","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","to","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_5___default","component","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_6___default","filter","n","node","map","_ref2","_MenuItem__WEBPACK_IMPORTED_MODULE_8__","post","key","id","title","date","className","dangerouslySetInnerHTML","__html"],"mappings":"yPAUMA,EAAYC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,6DAKTK,EAAOL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,iIAQJM,EAAON,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGJ,CAAH,yJAqBJO,EAAYP,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,gBAAGJ,CAAH,wCAITQ,EAAgBR,YAAOS,QAAVP,WAAA,CAAAC,YAAA,sCAAAC,YAAA,gBAAGJ,CAAH,oHASbU,EAAWV,IAAOW,EAAVT,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAAGJ,CAAH,+CA2CDY,EAAS,aA4BPC,UAlEc,SAAAC,GAA6B,IAA1BC,EAA0BD,EAA1BC,KACtBC,EAAsCD,EAAtCC,eAAgBC,EAAsBF,EAAtBE,kBAChBC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAAUH,EAAVG,MAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACxB,EAAD,KACEsB,EAAAC,EAAAC,cAAClB,EAAD,KACEgB,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACf,EAAD,CAAekB,GAAG,4BAAlB,2BAIFL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAMM,UAAU,OACdP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,MACCF,EACEU,OAAO,SAACC,GAAD,QAAcA,KAAOA,EAAEC,OAC9BC,IAAI,SAAAC,GAAA,IAAGF,EAAHE,EAAGF,KAAH,OACHX,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,KAAMJ,EAAMK,IAAKL,EAAKM,SAIxCjB,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAAA,UAAKL,EAAYqB,OACjBlB,EAAAC,EAAAC,cAACb,EAAD,KAAWQ,EAAYsB,MACvBnB,EAAAC,EAAAC,cAAA,OACEkB,UAAU,oBACVC,wBAAyB,CAAEC,OAAQxB","file":"component---src-templates-benutzer-doku-template-tsx-0bb095e7cbdd8564c7d0.js","sourcesContent":["import React from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport List from '@material-ui/core/List'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport Layout from '../components/Layout'\r\nimport MenuItem from './MenuItem'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n\r\nconst Container = styled.div`\r\n  margin-top: 64px;\r\n  height: calc(100vh - 64px);\r\n  display: flex;\r\n`\r\nconst Menu = styled.div`\r\n  width: 25%;\r\n  min-width: 320px;\r\n  height: calc(100vh - 64px);\r\n  overflow-y: auto;\r\n  padding: 25px 0;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`\r\nconst Doku = styled.div`\r\n  width: 100%;\r\n  padding: 25px;\r\n  overflow-y: auto;\r\n  ul {\r\n    margin-top: 0;\r\n  }\r\n  p,\r\n  li {\r\n    margin-bottom: 0;\r\n  }\r\n  h1,\r\n  h3,\r\n  ol {\r\n    margin-bottom: 10px;\r\n  }\r\n  h2 {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n`\r\nconst MenuTitle = styled.div`\r\n  padding: 0 24px;\r\n  margin-bottom: 14px;\r\n`\r\nconst MenuTitleLink = styled(Link)`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`\r\nconst DokuDate = styled.p`\r\n  margin-bottom: 15px !important;\r\n  color: grey;\r\n`\r\n\r\nconst BenutzerDokuTemplate = ({ data }: { data: any }) => {\r\n  const { markdownRemark, allMarkdownRemark } = data\r\n  const { frontmatter, html } = markdownRemark\r\n  const { edges } = allMarkdownRemark\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Layout>\r\n        <Container>\r\n          <Menu>\r\n            <MenuTitle>\r\n              <MenuTitleLink to=\"/Benutzer-Dokumentation/\">\r\n                Benutzer-Dokumentation\r\n              </MenuTitleLink>\r\n            </MenuTitle>\r\n            <List component=\"nav\">\r\n              <Divider />\r\n              {edges\r\n                .filter((n: any) => !!n && !!n.node)\r\n                .map(({ node }: { node: any }) => (\r\n                  <MenuItem post={node} key={node.id} />\r\n                ))}\r\n            </List>\r\n          </Menu>\r\n          <Doku>\r\n            <h1>{frontmatter.title}</h1>\r\n            <DokuDate>{frontmatter.date}</DokuDate>\r\n            <div\r\n              className=\"blog-post-content\"\r\n              dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n          </Doku>\r\n        </Container>\r\n      </Layout>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        path\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: ASC, fields: [frontmatter___sort] },\r\n      filter: {fileAbsolutePath: {regex: \"/(\\/benutzerDoku)/.*\\\\.md$/\"}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            date(formatString: \"DD.MM.YYYY\")\r\n            path\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BenutzerDokuTemplate\r\n"],"sourceRoot":""}