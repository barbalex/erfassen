{"version":3,"sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/utils/createMessageDb.js","webpack:///./src/utils/couchUrl.js","webpack:///./src/utils/provideProjectDbs.js","webpack:///./src/utils/createAndSyncUserCollection.js","webpack:///./src/state/Auth.js","webpack:///./src/state/withAuth.js","webpack:///./src/utils/couchBaseUrl.js","webpack:///./src/utils/userDbNameFromUserEmail.js","webpack:///./src/utils/getProjectDbName.js","webpack:///./src/utils/createProjectDb.js"],"names":["Container","styled","div","withConfig","displayName","componentId","ErrorTitle","ReloadButton","Button","ErrorBoundary","props","_this","_Component","call","this","state","error","getDerivedStateFromError","render","_this2","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","message","variant","onClick","window","location","reload","children","React","Children","map","child","cloneElement","Object","assign","Component","rxdb","plugin","pouchdbAdapterHttp","pouchdbAdapterIdb","createMessageDb","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","authState","messageDb","projectDefCollection","projectdefSync","wrap","_context","prev","next","create","name","adapter","sent","t0","collection","schema","projectDefMessageSchema","pouchSettings","fetch","_fetch","_x2","_x3","apply","arguments","toString","url","opts","credentials","addDb","db","sync","remote","couchBaseUrl","options","live","retry","query","projectdef","find","where","eq","addSync","stop","_x","couchUrl","isLocalhost","hostname","replace","provideProjectDbs","usersProjects","projects","dbs","existingProjects","keys","filter","startsWith","projectsToAdd","difference","projectsToRemove","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","length","done","value","projectName","createProjectDb","createAndSyncUserCollection","email","_authState$state","syncs","userDbName","userDb","userDbNameFromUserEmail","userDocSchema","_fetch2","_x4","_x5","includes","abrupt","user","docs$","subscribe","docData","PouchDB","pouchdbAuthentication","AuthContainer","_Container","setAuthDb","authDb","setState","setEmail","setSignupOpen","signupOpen","setLoginOpen","loginOpen","signUp","password","logOut","t1","logIn","t2","_ref4","_callee2","_ref3","logInResponce","userCollection","userDocs","_context2","Error","assertThisInitialized_default","catch","exec","userDoc","_callee3","_this$state","_context3","values","forEach","remove","cancel","setDbs","_ref6","_Object$assign","newDbs","setSyncs","_ref7","_Object$assign2","newSyncs","getSession","then","resp","get","__webpack_exports__","WrappedComponent","react_default","unstated_es","to","AuthState","module","exports","toLowerCase","getProjectDbName","creatorName","projectDbName","test","projectDb","messages","insert","type","projectDefSchema","_id"],"mappings":"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","file":"3-d085540b41ec3ffa0bfc.js","sourcesContent":["// @flow\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Button from '@material-ui/core/Button'\n\nconst Container = styled.div`\n  margin: 10px;\n`\nconst ErrorTitle = styled.div`\n  margin-bottom: 10px;\n`\nconst ReloadButton = styled(Button)`\n  margin-top: 10px !important;\n`\n\nclass ErrorBoundary extends Component {\n\n  static getDerivedStateFromError(error) {\n    // Catch errors in any components below and re-render with error message\n    return {\n      error,\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { error: null }\n  }\n\n  render() {\n    const { error } = this.state\n    if (error) {\n      console.log('error:', error)\n      return (\n        <Container>\n          <ErrorTitle>\n            Oh je, es ist ein Fehler aufgetreten! Bericht:\n          </ErrorTitle>\n          <div>{error.message}</div>\n          <ReloadButton\n            variant=\"outlined\"\n            onClick={() => {\n              typeof window !== 'undefined' && window.location.reload(false)\n            }}\n          >\n            Neu laden\n          </ReloadButton>\n        </Container>\n      )\n    }\n    const { children } = this.props\n    var childrenWithProps = React.Children.map(children, child =>\n      React.cloneElement(child, { ...this.props }),\n    )\n\n    // Normally, just render children\n    // and pass all props\n    return childrenWithProps\n  }\n}\n\nexport default ErrorBoundary\n","import rxdb from 'rxdb'\n\nimport pouchdbAdapterHttp from 'pouchdb-adapter-http'\nimport pouchdbAdapterIdb from 'pouchdb-adapter-idb'\n\nimport projectDefMessageSchema from '../schemas/projectDefMessage.json'\nimport couchBaseUrl from './couchBaseUrl'\n\nrxdb.plugin(pouchdbAdapterHttp)\nrxdb.plugin(pouchdbAdapterIdb)\n\nexport default async authState => {\n  // TODO:\n  // 1. fetch userDoc and it's project list\n  // 2. for every project create an rxdb\n  // 3. for every project fetch typeDefs doc and extract table list\n  // 4. for every table create collection and sync it\n  let messageDb\n  try {\n    messageDb = await rxdb.create({\n      name: 'messages',\n      adapter: 'idb',\n    })\n  } catch (error) {\n    throw error\n  }\n  // maybe use\n  // https://github.com/rafamel/rxdb-utils#models\n  // to make this easier\n  let projectDefCollection = await messageDb.collection({\n    name: 'projectdef',\n    schema: projectDefMessageSchema,\n    // force pouch to always include credentials\n    // see: https://github.com/pouchdb-community/pouchdb-authentication/issues/239#issuecomment-410489376\n    pouchSettings: {\n      fetch(url, opts) {\n        opts.credentials = 'include'\n        return fetch(url, opts)\n      },\n    },\n  })\n  authState.addDb({ name: 'messages', db: messageDb })\n\n  console.log('createMessageDb', { messageDb, projectDefCollection })\n  const projectdefSync = await projectDefCollection.sync({\n    remote: `${couchBaseUrl()}/messages/`,\n    options: {\n      live: true,\n      retry: true,\n    },\n    query: messageDb.projectdef\n      .find()\n      .where('type')\n      .eq('projectDef'),\n  })\n  //projectdefSync.error$.subscribe(error => console.dir(error))\n  //projectdefSync.change$.subscribe(change => console.dir(change))\n  //projectdefSync.docs$.subscribe(docData => console.dir(docData))\n  //projectdefSync.denied$.subscribe(docData => console.dir(docData))\n\n  authState.addSync({ name: 'messageDbProjectDef', sync: projectdefSync })\n}\n","// in development should return local path\nexport default () => {\n  if (typeof window === 'undefined') {\n    return 'https://erfassen.ch:5984/erfassen'\n  }\n  const hostnameWithoutWww = window.location.hostname.replace('www.', '')\n  const isLocalhost = hostnameWithoutWww === 'localhost'\n  const hostname = isLocalhost ? 'localhost' : window.location.hostname\n  const couchUrl = isLocalhost\n    ? `http://${hostname}:5984/erfassen`\n    : `https://erfassen.ch:5984/erfassen`\n\n  return couchUrl\n}\n","import difference from 'lodash/difference'\n\nimport createProjectDb from './createProjectDb'\n\n// TODO\n// check existing dbs\n// add only missing ones\n// remove existing ones not in projects list\n\nexport default ({ projects: usersProjects, authState }) => {\n  const { dbs } = authState.state\n  if (!dbs) return console.log('provideProjectDbs: no dbs found')\n  const existingProjects = Object.keys(dbs).filter(name =>\n    name.startsWith('project_'),\n  )\n  const projectsToAdd = difference(usersProjects, existingProjects)\n  const projectsToRemove = difference(existingProjects, usersProjects)\n  console.log('provideProjectDbs', {\n    existingProjects,\n    usersProjects,\n    projectsToAdd,\n    projectsToRemove,\n  })\n  for (let projectName of projectsToAdd) {\n    createProjectDb({\n      projectName,\n      authState,\n    })\n  }\n}\n","import rxdb from 'rxdb'\nimport pouchdbAdapterIdb from 'pouchdb-adapter-idb'\n\nimport userDbNameFromUserEmail from './userDbNameFromUserEmail'\nimport userDocSchema from '../schemas/userDoc.json'\nimport couchBaseUrl from './couchBaseUrl'\nimport provideProjectDbs from './provideProjectDbs'\n\nrxdb.plugin(pouchdbAdapterIdb)\n\nexport default async ({ authState, email }) => {\n  //console.log('createAndSyncUserCollections', { authState })\n  const { dbs, syncs } = authState.state\n  // create userDoc Collection\n  // then sync it\n  const userDbName = userDbNameFromUserEmail(email)\n  //console.log('createAndSyncUserCollections', { dbs, syncs })\n  let userDb\n  try {\n    userDb = await rxdb.create({\n      name: userDbName,\n      adapter: 'idb',\n      // force pouch to always include credentials\n      // see: https://github.com/pouchdb-community/pouchdb-authentication/issues/239#issuecomment-410489376\n      pouchSettings: {\n        fetch(url, opts) {\n          opts.credentials = 'include'\n          return fetch(url, opts)\n        },\n      },\n    })\n    await userDb.collection({\n      name: 'user',\n      schema: userDocSchema,\n      // force pouch to always include credentials\n      // see: https://github.com/pouchdb-community/pouchdb-authentication/issues/239#issuecomment-410489376\n      pouchSettings: {\n        fetch(url, opts) {\n          opts.credentials = 'include'\n          return fetch(url, opts)\n        },\n      },\n    })\n  } catch (error) {\n    if (error.message.includes('already exists')) {\n      console.log('user db already exists')\n      return\n    } else {\n      throw error\n    }\n  }\n  authState.addDb({ name: userDbName, db: userDb })\n  const isAlreadyBeingSynced = !!syncs && !!syncs[userDbName]\n  //console.log('createAndSyncUserCollections', { dbs })\n  let sync\n  if (!isAlreadyBeingSynced) {\n    sync = userDb.user.sync({\n      remote: `${couchBaseUrl()}/${userDbName}/`,\n      options: {\n        live: true,\n        retry: true,\n      },\n      query: userDb.user\n        .find()\n        .where('type')\n        .eq('user'),\n    })\n  }\n  authState.addSync({ name: 'user', sync })\n  sync.docs$.subscribe(docData =>\n    provideProjectDbs({ projects: docData.projects, authState }),\n  )\n  console.log('createAndSyncUserCollection', { dbs, userDb, userDbName, sync })\n  return\n}\n","import { Container } from 'unstated'\n\nimport userDbNameFromUserEmail from '../utils/userDbNameFromUserEmail'\n\n/**\n * somehow gatsby manages to sometimes (not always)\n * drag this file through node which makes\n * pouchdb-browser complain fetch is missing\n * using pouchdb is no solution because that complains\n * to miss many bindings\n */\nimport 'isomorphic-fetch'\nimport PouchDB from 'pouchdb-browser'\nimport pouchdbAuthentication from 'pouchdb-authentication'\nimport get from 'lodash/get'\n\nimport createMessageDb from '../utils/createMessageDb'\nimport couchUrl from '../utils/couchUrl'\nimport createAndSyncUserCollection from '../utils/createAndSyncUserCollection'\nimport provideProjectDbs from '../utils/provideProjectDbs'\n\nPouchDB.plugin(pouchdbAuthentication)\n\nexport default class AuthContainer extends Container {\n  constructor() {\n    super()\n    const authDb = new PouchDB(couchUrl())\n    const dbs = typeof window === 'undefined' ? null : window.dbs || null\n    this.state = {\n      authDb,\n      email: null,\n      signupOpen: false,\n      loginOpen: false,\n      dbs,\n      syncs: {},\n    }\n\n    authDb\n      .getSession()\n      .then(resp => {\n        const email = get(resp, 'userCtx.name', null)\n        if (email) {\n          this.setState({ email })\n          createAndSyncUserCollection({ email, authState: this })\n          // create initial dbs state\n          if (\n            (typeof window !== 'undefined' && !window.dbs) ||\n            typeof window === 'undefined'\n          ) {\n            createMessageDb(this).catch(error => {\n              throw error\n            })\n          }\n        }\n      })\n      .catch(error => {\n        throw error\n      })\n  }\n\n  setAuthDb = authDb => {\n    this.setState({ authDb })\n  }\n\n  setEmail = email => {\n    this.setState({ email })\n  }\n\n  setSignupOpen = signupOpen => {\n    this.setState({ signupOpen })\n  }\n\n  setLoginOpen = loginOpen => {\n    this.setState({ loginOpen })\n  }\n\n  signUp = async ({ email, password }) => {\n    // first logout\n    try {\n      await this.logOut()\n    } catch (error) {\n      console.log('Auth, signUp: Error logging out:', error)\n    }\n\n    try {\n      await this.state.authDb.signUp(email, password)\n    } catch (error) {\n      console.log('Signup: error logging in:', error)\n    }\n    this.setSignupOpen(false)\n    // log in\n    try {\n      await this.logIn({ email, password })\n    } catch (error) {\n      throw error\n    }\n  }\n\n  logIn = async ({ email, password }) => {\n    // first logout\n    // ignore error that occurs if user was not logged in\n    await this.logOut()\n\n    let logInResponce\n    try {\n      logInResponce = await this.state.authDb.logIn(email, password)\n    } catch (error) {\n      if (error.name === 'unauthorized' || error.name === 'forbidden') {\n        // name or password incorrect\n        throw new Error('Name oder Passwort stimmt nicht')\n      } else {\n        // cosmic rays, a meteor, etc.\n        throw error\n      }\n    }\n    //console.log('Auth, logIn: logInResponce logging in:', logInResponce)\n    this.setState({\n      email: logInResponce.name,\n      loginOpen: false,\n      authDb: new PouchDB(couchUrl()),\n    })\n    await createAndSyncUserCollection({ email, authState: this })\n    await createMessageDb(this).catch(error => {\n      throw error\n    })\n    // TODO:\n    // grab list of projects from user collection\n    // create project db's\n    const userDbName = userDbNameFromUserEmail(email)\n    const userDb = this.state.dbs[userDbName]\n    const userCollection = userDb.user\n    const userDocs = await userCollection.find().exec()\n    if (userDocs && userDocs[0]) {\n      console.log('logIn', {\n        userDbName,\n        userDb,\n        userCollection,\n        userDoc: userDocs[0],\n      })\n      provideProjectDbs({ projects: userDocs[0].projects, authState: this })\n    }\n  }\n\n  logOut = async () => {\n    try {\n      await this.state.authDb.logOut()\n    } catch (error) {\n      throw error\n    }\n    const { dbs, syncs } = this.state\n    // dbs can be null if user was not logged in\n    if (!dbs) return\n    // remove all dbs\n    Object.values(dbs).forEach(db => db.remove())\n    // stop all syncing\n    Object.values(syncs).forEach(sync => sync.cancel())\n    this.setState({\n      email: null,\n      loginOpen: false,\n      dbs: null,\n      syncs: {},\n    })\n    return\n  }\n\n  setDbs = dbs => {\n    this.setState({ dbs })\n  }\n\n  addDb = ({ name, db }) => {\n    //console.log('Auth, addDb', { name, db, dbs: this.state.dbs })\n    this.setState(state => {\n      console.log('Auth, addDb', { dbs: state.dbs })\n      const newDbs = {\n        ...state.dbs,\n        [name]: db,\n      }\n      console.log('Auth, addDb', { newDbs })\n      window.dbs = newDbs\n      return {\n        dbs: newDbs,\n      }\n    })\n  }\n\n  setSyncs = syncs => {\n    this.setState({ syncs })\n  }\n\n  addSync = ({ name, sync }) => {\n    this.setState(state => {\n      const newSyncs = {\n        ...state.syncs,\n        [name]: sync,\n      }\n      return {\n        dbs: state.dbs,\n        syncs: newSyncs,\n      }\n    })\n  }\n}\n","/**\n * inspired from:\n * https://www.reddit.com/r/reactjs/comments/8t3di7/how_do_you_access_your_store_in_lifecycle/\n * example: https://github.com/jaredpalmer/react-fns/blob/052ea56092c53946c7937e1d32adf78a7d37d6f3/src/GeoPosition/withGeoPosition.tsx\n */\nimport React from 'react'\nimport { Subscribe } from 'unstated'\n\nimport AuthState from './Auth'\n\nexport default WrappedComponent => props => (\n  <Subscribe to={[AuthState]}>\n    {value => <WrappedComponent authState={value} {...props} />}\n  </Subscribe>\n)\n","// in development should return local path\nexport default () => {\n  if (typeof window === 'undefined') {\n    return 'https://erfassen.ch:5984'\n  }\n  const hostnameWithoutWww = window.location.hostname.replace('www.', '')\n  const isLocalhost = hostnameWithoutWww === 'localhost'\n  const hostname = isLocalhost ? 'localhost' : window.location.hostname\n  const couchUrl = isLocalhost\n    ? `http://${hostname}:5984`\n    : `https://erfassen.ch:5984`\n\n  return couchUrl\n}\n","module.exports = email =>\n  'user_' +\n  email\n    .toLowerCase()\n    .replace('@', '_at_')\n    .replace('.', '_p_')\n","export default ({ creatorName, projectName }) => {\n  const projectDbName =\n    'project_' +\n    creatorName\n      .toLowerCase()\n      .replace('@', '_at_')\n      .replace('.', '_p_') +\n    '_' +\n    projectName\n  if (!/^[a-z][a-z0-9_$()+/-]*$/.test(projectDbName)) {\n    return console.log('Name is not valid db name')\n  }\n  return projectDbName\n}\n","import rxdb from 'rxdb'\nimport pouchdbAdapterHttp from 'pouchdb-adapter-http'\nimport pouchdbAdapterIdb from 'pouchdb-adapter-idb'\n\nrxdb.plugin(pouchdbAdapterHttp)\nrxdb.plugin(pouchdbAdapterIdb)\n\nimport getProjectDbName from './getProjectDbName'\nimport projectDefSchema from '../schemas/projectDef.json'\nimport couchBaseUrl from './couchBaseUrl'\n\nexport default async ({ projectName, authState }) => {\n  const { dbs, email: creatorName } = authState.state\n  const projectDbName = getProjectDbName({\n    creatorName,\n    projectName,\n  })\n  // check if this dbname already exists\n  const dbNames = Object.keys(dbs)\n  if (dbNames.includes(projectDbName)) {\n    throw new Error('Dieser Name wird schon benutzt')\n  }\n\n  try {\n    await dbs.messages.projectdef.insert({\n      projectName,\n      creatorName,\n      type: 'projectDef',\n    })\n  } catch (error) {\n    throw error\n  }\n\n  let projectDb\n  try {\n    projectDb = await rxdb.create({\n      name: projectDbName,\n      adapter: 'idb',\n    })\n  } catch (error) {\n    throw error\n  }\n  const projectDefCollection = await projectDb.collection({\n    name: 'projectdef',\n    schema: projectDefSchema,\n    // force pouch to always include credentials\n    // see: https://github.com/pouchdb-community/pouchdb-authentication/issues/239#issuecomment-410489376\n    pouchSettings: {\n      fetch(url, opts) {\n        opts.credentials = 'include'\n        return fetch(url, opts)\n      },\n    },\n  })\n  authState.addDb({ name: projectDbName, db: projectDb })\n  const projectdefSync = await projectDefCollection.sync({\n    remote: `${couchBaseUrl()}/${projectDbName}/`,\n    options: {\n      live: true,\n      retry: true,\n    },\n    query: projectDb.projectdef\n      .find()\n      .where('type')\n      .eq('projectDef'),\n  })\n  //projectdefSync.error$.subscribe(error => console.dir(error))\n  //projectdefSync.change$.subscribe(change => console.dir(change))\n  //projectdefSync.docs$.subscribe(docData => console.dir(docData))\n  //projectdefSync.denied$.subscribe(docData => console.dir(docData))\n\n  authState.addSync({\n    name: `${projectDbName}ProjectDef`,\n    sync: projectdefSync,\n  })\n\n  console.log('NewProject', { projectDefCollection })\n  // insert project def into project db\n  try {\n    await projectDefCollection.insert({\n      _id: 'projectDef',\n      projectName,\n      creatorName,\n      type: 'projectDef',\n    })\n  } catch (error) {\n    throw error\n  }\n  console.log('finished creating new project')\n}\n"],"sourceRoot":""}